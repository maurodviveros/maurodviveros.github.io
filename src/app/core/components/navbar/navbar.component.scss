@use 'sass:map';
@use '@angular/material' as mat;

$picture-width: 150px;
$padding: 15px 0;
$gap: 1rem;

:host{
    display: flex;
    flex-direction: column;
    gap: $gap;
    padding: $padding;
    z-index: 1;
    position: relative;
};

header{
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: $gap;
    z-index: 2;

    & > picture{
        border-radius: 50%;
        border-style: solid;
        width: $picture-width;
        height: $picture-width;
        border-width: 2px;
        padding: 3px;

        & > img{
            width: 100%;
            border-radius: 50%;
        };
    };

    & > hgroup{
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;

        & > * { margin: 0; };
    };
};

nav{
    display: flex;
    flex-direction: column;
    flex: 1;
    z-index: 1;

    & > mat-nav-list{
        &#menu{ flex: 1; };
        &#social{
            display: flex;
            justify-content: space-around;

            a{
                width: 1.5rem;
                height: 1.5rem;
                max-height: 1.5rem;
                box-sizing: content-box;
                padding: .5rem;
                border-radius: 8px;

                mat-icon{
                    vertical-align: middle;
                };
            }
        };
    };
};

// Theming
@mixin color($config) {
  $primary-palette: map.get($config, primary);

  core-navbar{
    background-color: mat.get-color-from-palette($primary-palette, 500);
    color: mat.get-contrast-color-from-palette($primary-palette, 500);

    picture{ border-color: mat.get-contrast-color-from-palette($primary-palette, 500); };
    header{ background-color: mat.get-color-from-palette($primary-palette, 500); };
    nav{ background-color: mat.get-color-from-palette($primary-palette, 500); };

    mat-list-item{
      mat-icon{ color: mat.get-contrast-color-from-palette($primary-palette, 500) !important; };
      span{ color: mat.get-contrast-color-from-palette($primary-palette, 500); };
      &.active{ background-color: rgba(0, 0, 0, .1); };
    };
  };
};

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);

  @if $color-config != null { @include color($color-config); };
};